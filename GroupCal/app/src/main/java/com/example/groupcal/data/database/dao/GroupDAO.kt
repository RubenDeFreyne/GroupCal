package com.example.groupcal.data.database.dao

import androidx.lifecycle.LiveData
import androidx.room.Dao
import androidx.room.Query
import com.example.groupcal.data.database.databaseModels.Group
import io.reactivex.Single

/**
 * DAO used to manage the CRUD operations of [Group] and implements [BaseDAO] to manage
 * commonly used operations
 */

@Dao
interface GroupDAO : BaseDAO<Group> {

    /**
     * Get specific [Group] object saved in the database by its Id
     *
     * @param id The id generated by the backend
     * @return Observable [Group] object from the database
     */
    @Query("SELECT * from group_table WHERE group_id = :id")
    fun get(id: String): Single<Group?>

    /**
     * Get all [Group] objects in the database
     *
     * @return LiveData list of all [Group] objects in the database
     */
    @Query("SELECT * FROM group_table ORDER BY name DESC")
    fun getAllGroups(): LiveData<List<Group>>

    /**
     * Get the number of rows of [Group] in database for checking if the database is empty
     *
     * @return The amount of rows in the [Group] table
     */
    @Query("select count(*) from group_table")
    fun getRowCount(): Int
}