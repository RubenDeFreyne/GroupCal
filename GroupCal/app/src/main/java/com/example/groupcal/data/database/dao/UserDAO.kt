package com.example.groupcal.data.database.dao

import androidx.room.Dao
import androidx.room.Query
import com.example.groupcal.data.database.databaseModels.Group
import com.example.groupcal.data.database.databaseModels.User
import io.reactivex.Single

/**
 * DAO used to manage the CRUD operations of [User] and implements [BaseDAO] to manage
 * commonly used operations
 */
@Dao
interface UserDAO : BaseDAO<User>{

    /**
     * Get specific [User] object saved in the database by its Id
     *
     * @param id The id generated by the database
     * @return Observable [User] object from the database
     */
    @Query("SELECT * from user_table WHERE databaseId = :id")
    fun get(id: Long): Single<User?>

    /**
     * Get all [User] objects in the database
     *
     * @return Observable list of all [User] objects in the database
     */
    @Query("SELECT * FROM user_table ORDER BY username DESC")
    fun getAllUsers(): Single<List<User>>
}